name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Many color libraries just need this to be set to any value, but at least
  # one distinguishes color depth, where "3" -> "256-bit color".
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

  # Where there's smoke, there's fire!
  smoke:
    name: Smoke tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install the project
        run: uv sync --group test
      - name: Run smoke test
        run: uv run pytest tests/smoke -ra

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [smoke]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        runs-on: [ubuntu-latest, macos-latest, windows-latest]

        # TODO: figure out OpenBLAS install
        #   ``ERROR: Dependency "OpenBLAS" not found, tried pkgconfig and cmake``
        # include:
        #   - python-version: pypy-3.11
        #     runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --group test

      - name: Test package
        run: >-
          uv run pytest src docs tests/unit tests/functional -ra --cov
          --cov-report=xml --cov-report=term --durations=20 --arraydiff -m"not
          slow"

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.1.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  check_interop:
    name: Check Interoperability
    runs-on: ${{ matrix.runs-on }}
    needs: [smoke]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --extra all --group test-all

      - name: Test package
        run: >-
          uv run pytest tests/integration src docs tests/unit tests/functional
          -ra --durations=20 --cov --cov-report=xml --cov-report=term
          --arraydiff -m"not slow" --mpl --mpl-hash-library=hashes.json
          --mpl-deterministic

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.1.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
