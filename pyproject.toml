[build-system]
  build-backend = "hatchling.build"
  requires = ["hatchling", "hatch-vcs"]


[project]
  authors = [
    { name = "galax maintainers", email = "nstarman@users.noreply.github.com" },
    { name = "Jake Nibauer", email = "jnibauer@princeton.edu" },
    { name = "Nathaniel Starkman", email = "nstarman@users.noreply.github.com" },
  ]
  classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
  ]
  dependencies = [
    "array-api-jax-compat >=0.1a1",
    "astropy >= 5.3",
    "beartype",
    "diffrax",
    "equinox != 0.11.3",
    "jax",
    "jaxlib",
    "jax-quantity >=0.1a0",
    "lazy_loader",
    "quax >= 0.0.3",
    "typing_extensions",
  ]
  description = "Galactic Dynamix in Jax."
  dynamic = ["version"]
  name = "galax"
  readme = "README.md"
  requires-python = ">=3.11"

  [project.optional-dependencies]
    all = ["galax[compat-all]", "galax[test]", "galax[docs]"]
    compat-all = ["galax[compat-gala]"]
    compat-gala = ["gala"]
    docs = [
      "sphinx>=7.0",
      "myst_parser>=0.13",
      "sphinx_copybutton",
      "sphinx_autodoc_typehints",
      "furo>=2023.08.17",
    ]
    test = [
      "hypothesis[numpy]",
      "pytest >=6,<8",
      "pytest-cov >=3",
      "pytest-arraydiff",
      "sybil",
    ]

  [project.urls]
    "Bug Tracker" = "https://github.com/GalacticDynamics/galax/issues"
    Changelog = "https://github.com/GalacticDynamics/galax/releases"
    Discussions = "https://github.com/GalacticDynamics/galax/discussions"
    Homepage = "https://github.com/GalacticDynamics/galax"


[tool.hatch]
  build.hooks.vcs.version-file = "src/galax/_version.py"
  envs.default.dependencies = ["pytest", "pytest-cov"]
  version.source = "vcs"


[tool.pytest.ini_options]
  addopts = [
    "-ra",
    "--arraydiff",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
  ]
  filterwarnings = [
    "error",
    "ignore:ast\\.Str is deprecated:DeprecationWarning",
    "ignore:numpy\\.ndarray size changed:RuntimeWarning",
  ]
  log_cli_level = "INFO"
  markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
  ]
  minversion = "6.0"
  testpaths = ["tests/", "docs", "src/galax"]
  xfail_strict = true


[tool.coverage]
  run.source = ["galax"]

  [tool.coverage.report]
    exclude_lines = [
      # Have to re-enable the standard pragma
      'pragma: no cover',
      # Ignore type-checking stuff
      'if typing.TYPE_CHECKING:',
      'if TYPE_CHECKING:',
      '\.\.\.',
      # Ignore contents of abstract methods
      '@abc.abstractmethod',
      '@abstractmethod',
    ]


[tool.mypy]
  python_version = "3.11"

  disallow_incomplete_defs = true
  disallow_untyped_defs = true
  exclude = [
    '(^/)docs/',      # docs
    '(^|/)tests/',    # tests
    '^conftest\.py$', # nox test configuration
  ]
  strict = true
  warn_redundant_casts = true
  warn_unreachable = true
  warn_unused_configs = true

  enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

  [[tool.mypy.overrides]]
    disable_error_code = ["name-defined"] # <- jaxtyping
    module = "galax.*"

  [[tool.mypy.overrides]]
    ignore_missing_imports = true
    module = [
      "astropy.*",
      "beartype.*",
      "diffrax.*",
      "equinox.*",
      "hypothesis.*",
      "jax.*",
      "jax_cosmo.*",
      "jaxtyping.*",
      "numpy.*",
      "scipy.*",
      "sympy.*",
      "sympy2jax.*",
    ]


[tool.ruff]
  src = ["src"]

  [tool.ruff.lint]
    extend-select = ["ALL"]
    ignore = [
      "ANN101", # Missing type annotation for self in method
      "ANN102", # Missing type annotation for cls in classmethod
      "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `*args`
      "COM812", # Missing trailing comma in Python 3.6+
      "D203",   # 1 blank line required before class docstring
      "D105",   # Missing docstring in magic method
      "D107",   # Missing docstring in `__init__`
      "D213",   # Multi-line docstring summary should start at the second line
      "E741",   # Ambiguous variable name
      "F722",   # Syntax error in forward annotation  <- jaxtyping
      "F821",   # undefined name  <- jaxtyping
      "FIX002", # Line contains TODO, consider resolving the issue
      "ISC001", # single-line-implicit-string-concatenation  <- ruff-format
      "N80",    # Naming conventions.
      "PD",     # pandas-vet
      "PLR",    # Design related pylint codes
      "PYI041", # Use `float` instead of `int | float` <- beartype is more strict
      "TCH00",  # Move into a type-checking block
      "TD002",  # Missing author in TODO
      "TD003",  # Missing issue link on the line following this TODO
      "UP037",  # Remove quote from type annotation  <- jaxtyping
      # TODO: fix these
      "ARG001",
      "ARG002",
      "ERA001", # commented-out code
      "F841",
    ]
    # Uncomment if using a _compat.typing backport
    # typing-modules = ["galax._compat.typing"]

    [tool.ruff.lint.per-file-ignores]
      "__init__.py" = ["F403"]
      "__init__.pyi" = ["F401", "F403"]
      "docs/conf.py" = [
        "A001",   # Variable `copyright` is shadowing a Python builtin
        "INP001", # implicit namespace package
      ]
      "notebooks/**" = ["ANN", "D103", "FBT", "T201"]
      "noxfile.py" = ["ERA001", "T20"]
      "tests/**" = [
        "ANN",
        "D10",
        "E731",
        "INP001",
        "S101",
        "S301",
        "SLF001",
        "T20",
        "TID252", # Relative imports from parent modules are banned
      ]

    [tool.ruff.lint.flake8-type-checking]
      exempt-modules = []

    [tool.ruff.lint.isort]
      combine-as-imports = true

    [tool.ruff.lint.pydocstyle]
      convention = "numpy"


[tool.pylint]
  ignore-paths = [".*/_version.py"]
  messages_control.disable = [
    "design",
    "fixme",
    "line-too-long",
    "missing-module-docstring",
    "wrong-import-position",
    "unnecessary-ellipsis",
    "import-outside-toplevel",
    "unnecessary-lambda-assignment", # ruff E731
    "protected-access",              # ruff SLF001
    "invalid-name",                  # ruff N80*
  ]
  py-version = "3.11"
  reports.output-format = "colorized"
  similarities.ignore-imports = "yes"
